import {of} from 'rxjs/observable/of';
import {Observable} from 'rxjs/Observable';

export let handleErrorForObservable = function handleError<T>(operation: string, result?: T) {
  return (error: any): Observable<T> => {
    handleErrorForPromise(error, operation);
    return of(result as T);
  }
};

export let handleErrorForPromise = (error: any, operation = 'operation') => {
  const errorMessage: string = ERRORS[error.status];
  console.log(operation + ': ' + errorMessage);
};

const ERRORS = {
  400: 'Некоректный запрос!',
  401: 'Доступ запрещен! Пожалуйста, выполните вход в свою учтенную запись, или, если это уже сделано, то выйдите' +
  'с неё и зайдите в снова',
  403: 'Отказ в доступе! У вас нет прав на доступ к этому ресурсу',
  404: 'Не найдено!',
  500: 'Ошибка сервера!',
  503: 'Служба временно недоступна, пожалуйста, пропробуйте пойже или свяжитесь с технической поддержкой'
};

// TODO: Написать нормальные сообщения для ошибок

// 400 некорректный запрос
// Такой код означает, что запрос к серверу был сформулирован неправильно, возможно использовался некорректный синтаксис.

// 401 доступ запрещен
// Этот код возникает в том случае, если пользователь пытается получить доступ к закрытому ресурсу без авторизации,
// либо если он не полностью авторизовался. То есть пользователь должен ввести свой логин и пароль чтобы получить
// доступ к защищенному ресурсу.

// 403 отказ в доступе
// Этот код означает, что пользователь создал верный запрос, но сервер отказал в выдаче ответа, из-за ограничений прав

// 404 не найдено
// Ошибка означает, что пользователь корректно обратился к серверу, но сам сервер не смог найти запрашиваемый ресурс.

// 500 внутрення ошибка сервера
// Ошибка означает, что запрос не может быть обработан сервером, по неизвестной внутренней причине.

// 503 служба недоступна
// Такой код говорит о том, что сервер или перегружен или находится на обслуживании
